var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.096,1,1.442]],["body/classes/Account.html",[0,0.081,1,1.751,2,1.546,3,0.184,4,0.184,5,0.184,6,2.371,7,2.677,8,2.859,9,0.437,10,1.514,11,2.331,12,4.443,13,3.98,14,3.776,15,2.221,16,2.428,17,2.428,18,2.428,19,2.428,20,0.933,21,0.644,22,4.039,23,2.462,24,1.225,25,4.039,26,0.915,27,0.027,28,1.421,29,0.796,30,2.842,31,2.811,32,2.811,33,2.428,34,4.215,35,2.08,36,2.08,37,2.08,38,2.221,39,2.08,40,2.08,41,2.08,42,0.301,43,2.08,44,0.212,45,2.371,46,2.811,47,2.811,48,2.811,49,0.011,50,0.016,51,0.011]],["title/components/AccountComponent.html",[52,0.708,53,0.942]],["body/components/AccountComponent.html",[0,0.096,1,2.415,3,0.219,4,0.219,5,0.219,9,0.519,20,0.899,21,1.187,24,0.899,27,0.027,42,0.358,44,0.252,49,0.013,50,0.018,51,0.013,52,1.103,53,1.578,54,1.484,55,1.69,56,1.69,57,1.69,58,1.69,59,2.816,60,1.975,61,2.852,62,1.69,63,3.217,64,2.973,65,2.305,66,5.186,67,2.305,68,4.556,69,1.384,70,3.064,71,3.339,72,3.339,73,1.014,74,1.562,75,0.519,76,3.02,77,1.166,78,2.305,79,2.13,80,1.69,81,2.819,82,1.69,83,1.69,84,1.252,85,1.69,86,1.252,87,1.69,88,0.946,89,1.69,90,1.166,91,1.69,92,0.946,93,1.69,94,1.166,95,1.562,96,1.69,97,1.69]],["title/modules/AccountModule.html",[98,1.083,99,2.205]],["body/modules/AccountModule.html",[0,0.092,3,0.21,4,0.21,5,0.21,27,0.027,42,0.653,44,0.241,49,0.013,50,0.018,51,0.013,53,1.824,54,1.651,75,0.497,77,1.117,88,1.824,92,1.824,98,1.042,99,4.388,100,1.199,101,1.619,102,3.049,103,1.759,104,1.923,105,2.198,106,2.698,107,2.698,108,2.698,109,2.698,110,3.571,111,2.66,112,1.923,113,1.496,114,2.367,115,2.069,116,2.698,117,3.199,118,2.12,119,3.273,120,2.12,121,2.698,122,2.069,123,2.698,124,4.424,125,2.367,126,1.288]],["title/modules/AccountRoutingModule.html",[98,1.083,110,2]],["body/modules/AccountRoutingModule.html",[0,0.11,3,0.25,4,0.25,5,0.25,27,0.028,42,0.654,44,0.288,49,0.015,50,0.02,51,0.015,52,1.18,53,1.411,75,0.594,88,1.411,92,1.411,100,1.431,105,1.655,110,2.995,115,1.785,116,3.219,121,3.219,122,2.329,123,3.219,126,1.537,127,3.817,128,2.53,129,3.302,130,2.806,131,1.785,132,3.896,133,2.825,134,3.219,135,3.219,136,3.219,137,3.219,138,2.825]],["title/components/AppComponent.html",[52,0.708,84,1.247]],["body/components/AppComponent.html",[0,0.098,3,0.222,4,0.222,5,0.222,20,1.032,21,0.777,24,0.67,26,1.105,27,0.027,28,0.777,29,0.961,42,0.494,44,0.256,49,0.013,50,0.018,51,0.013,52,1.112,53,0.961,54,1.5,55,1.717,56,1.717,57,1.717,58,1.717,62,1.717,63,3.228,64,2.983,65,2.33,67,2.33,75,0.527,77,1.185,78,2.33,79,2.153,80,1.717,81,2.838,82,1.717,83,1.717,84,2.102,85,1.717,86,1.272,87,1.717,88,0.961,89,1.717,90,1.185,91,1.717,92,0.961,93,1.717,94,1.185,95,1.586,96,1.717,97,1.717,139,2.861,140,2.533,141,5.228,142,4.605,143,3.392,144,6.046,145,3.392,146,3.392,147,1.471,148,3.392,149,2.249]],["title/modules/AppModule.html",[98,1.083,150,2.205]],["body/modules/AppModule.html",[0,0.083,3,0.188,4,0.188,5,0.188,27,0.027,42,0.676,44,0.216,49,0.011,50,0.016,51,0.011,75,0.445,77,1,84,2.388,86,2.149,98,0.933,100,1.074,101,1.449,102,2.871,103,2.626,104,2.871,105,1.242,111,2.461,112,1.722,113,1.339,115,1.914,118,1.898,122,1.914,149,2.713,150,4.318,151,2.415,152,2.415,153,2.415,154,2.415,155,2.415,156,3.446,157,3.446,158,3.446,159,2.864,160,2.864,161,2.119,162,2.119,163,4.776,164,3.451,165,1.575,166,4.093,167,3.451,168,1.898,169,4.093,170,2.864,171,2.864,172,2.864,173,2.864,174,2.461,175,2.415,176,2.864,177,2.864,178,2.864,179,4.093,180,4.093,181,4.093]],["title/classes/AppPage.html",[0,0.096,182,2.461]],["body/classes/AppPage.html",[0,0.12,2,2.288,3,0.273,4,0.273,5,0.273,9,0.647,24,1.039,27,0.027,42,0.446,44,0.314,49,0.016,50,0.021,51,0.016,69,1.599,73,1.599,79,1.945,140,2.288,168,2.757,182,3.895,183,3.507,184,6.397,185,6.07,186,6.07,187,4.16,188,4.023,189,4.16,190,3.507,191,2.462,192,4.16,193,4.16,194,4.16,195,4.16]],["title/modules/AppRoutingModule.html",[98,1.083,156,2]],["body/modules/AppRoutingModule.html",[0,0.108,1,1.626,3,0.246,4,0.246,5,0.246,27,0.028,42,0.59,44,0.283,49,0.015,50,0.02,51,0.015,75,0.583,95,2.303,100,1.406,105,1.626,115,1.754,122,2.303,126,1.51,128,2.486,129,3.264,130,2.782,131,1.754,132,3.869,135,3.162,136,3.162,137,3.162,156,2.96,174,3.305,175,3.162,196,3.75,197,5.498,198,3.75,199,3.75,200,2.062,201,3.75,202,3.75,203,4.152,204,3.75,205,3.75,206,3.75,207,3.75]],["title/guards/AuthGuard.html",[174,2,208,2.461]],["body/guards/AuthGuard.html",[0,0.105,3,0.239,4,0.239,5,0.239,9,0.567,20,0.954,21,0.835,24,0.954,26,1.574,27,0.027,28,1.107,29,1.369,42,0.582,44,0.275,49,0.014,50,0.019,51,0.014,60,1.581,69,1.468,73,1.108,75,0.567,131,1.706,140,2.006,147,1.581,174,2.907,191,1.706,203,4.869,209,3.648,210,3.076,211,2.418,212,2.922,213,4.175,214,3.648,215,2.096,216,4.835,217,5.775,218,5.423,219,5.775,220,3.648,221,3.648,222,1.688,223,2.418,224,2.418,225,2.193,226,4.077,227,3.076]],["title/components/HeaderComponent.html",[52,0.708,86,1.247]],["body/components/HeaderComponent.html",[0,0.094,3,0.214,4,0.214,5,0.214,9,0.508,20,0.886,21,1.174,24,0.886,27,0.027,42,0.35,44,0.247,49,0.013,50,0.018,51,0.013,52,1.091,53,0.925,54,1.462,55,1.654,56,1.654,57,1.654,58,1.654,60,1.946,61,2.82,62,1.654,63,3.202,64,2.959,65,2.272,67,2.272,69,1.363,70,3.036,73,0.992,74,1.528,75,0.508,77,1.141,78,2.272,79,2.099,80,1.654,81,2.794,82,1.654,83,1.654,84,1.225,85,1.654,86,2.069,87,1.654,88,0.925,89,1.654,90,1.141,91,1.654,92,0.925,93,1.654,94,1.141,95,2.706,96,1.654,97,1.654,228,2.755,229,4.489,230,5.128,231,4.489,232,3.268,233,3.268,234,4.489,235,4.489,236,4.489]],["title/interfaces/IIdentity.html",[237,1.442,238,2.205]],["body/interfaces/IIdentity.html",[0,0.108,1,2.13,3,0.245,4,0.245,5,0.245,7,2.477,9,0.581,10,1.841,11,1.305,12,4.314,13,3.864,14,3.864,23,2.509,27,0.027,28,1.334,29,1.821,42,0.401,44,0.371,49,0.015,50,0.019,51,0.015,215,1.62,237,1.62,238,3.638,239,2.477,240,2.765,241,4.481,242,2.477,243,3.151,244,3.151,245,3.151,246,3.151,247,3.151,248,3.151]],["title/interfaces/IKeyValue.html",[237,1.442,249,2.205]],["body/interfaces/IKeyValue.html",[3,0.307,4,0.307,5,0.307,23,2.125,24,0.926,27,0.027,44,0.354,49,0.019,50,0.022,51,0.019,237,2.033,239,3.108,249,3.758,250,3.954,251,4.69,252,4.195,253,5.67,254,4.69]],["title/interfaces/IModelBase.html",[237,1.442,255,2.205]],["body/interfaces/IModelBase.html",[0,0.093,3,0.21,4,0.21,5,0.21,8,1.5,9,0.499,10,1.662,11,2.076,15,1.765,16,3.456,17,3.456,18,3.456,19,3.456,20,1.135,23,2.328,27,0.028,28,1.316,29,1.807,33,3.456,38,3.415,44,0.334,49,0.013,50,0.018,51,0.013,237,1.391,239,2.127,255,3.366,256,2.374,257,2.706,258,2.374,259,2.706,260,2.706,261,3.738,262,2.706]],["title/classes/Identity.html",[0,0.096,215,1.442]],["body/classes/Identity.html",[0,0.07,1,2.673,2,1.338,3,0.16,4,0.16,5,0.16,7,2.408,8,2.531,9,0.378,10,1.362,11,2.364,12,3.217,13,2.882,14,2.882,15,2.652,16,2.899,17,2.899,18,2.899,19,2.899,20,1.019,21,0.557,23,2.337,24,1.27,26,0.792,27,0.027,28,1.472,29,0.689,30,1.463,33,2.899,34,4.695,35,1.8,36,1.8,37,1.8,38,2.652,39,1.8,40,1.8,41,1.8,42,0.261,44,0.274,49,0.01,50,0.014,51,0.01,215,1.575,237,1.055,238,3.196,240,1.8,241,3.568,242,1.613,243,3.063,244,2.052,245,2.052,246,2.052,247,2.052,248,2.052,263,3.633,264,2.433,265,2.433,266,2.433,267,2.433,268,2.433,269,2.433,270,2.433,271,2.433,272,2.433,273,2.433]],["title/injectables/IdentityService.html",[212,1.683,222,1.162]],["body/injectables/IdentityService.html",[0,0.055,1,2.527,3,0.125,4,0.125,5,0.125,9,0.297,10,1.131,11,2.213,15,1.051,20,0.838,21,0.437,23,1.131,24,1.084,26,1.383,27,0.028,28,1.221,29,1.203,30,1.149,38,1.659,42,0.572,44,0.144,49,0.019,50,0.012,51,0.008,69,0.916,73,1.29,74,0.893,75,0.297,113,0.893,126,0.769,131,0.893,140,1.051,147,0.828,165,1.051,188,3.257,191,2.298,212,1.527,213,3.41,215,2.674,222,1.054,224,1.266,225,2.78,242,1.266,274,1.149,275,1.611,276,3.738,277,3.152,278,3.152,279,3.017,280,3.017,281,3.581,282,3.017,283,1.91,284,2.815,285,3.152,286,3.581,287,3.017,288,2.544,289,3.017,290,1.91,291,3.017,292,1.91,293,1.91,294,3.017,295,1.91,296,2.056,297,1.892,298,2.232,299,1.91,300,3.017,301,1.91,302,1.91,303,3.898,304,1.814,305,1.149,306,1.611,307,1.91,308,1.414,309,1.611,310,1.91,311,1.414,312,2.544,313,1.91,314,1.91,315,1.91,316,2.766,317,1.91,318,3.017,319,3.152,320,1.91,321,3.152,322,1.91,323,3.152,324,3.017,325,1.91,326,3.017,327,3.017,328,1.91,329,2.544,330,1.611,331,1.91,332,1.91,333,1.91,334,1.91,335,1.611,336,1.611,337,1.91,338,1.91,339,1.91,340,1.91,341,1.611,342,1.91,343,1.91,344,1.91,345,1.91,346,1.91]],["title/components/LoginComponent.html",[52,0.708,88,0.942]],["body/components/LoginComponent.html",[0,0.067,1,1.013,3,0.153,4,0.153,5,0.153,9,0.363,10,1.321,11,2.135,13,2.813,14,2.813,20,0.838,21,0.535,24,1.052,26,0.761,27,0.027,28,0.807,29,0.662,42,0.544,44,0.176,49,0.009,50,0.014,51,0.009,52,0.903,53,0.662,54,1.148,55,1.183,56,1.183,57,1.183,58,1.183,60,1.528,61,2.334,62,1.183,63,2.95,64,2.726,65,1.784,67,1.784,69,1.07,70,2.599,73,1.435,74,1.985,75,0.363,77,0.816,78,1.784,79,1.648,80,1.183,81,2.391,82,1.183,83,1.183,84,0.876,85,1.183,86,0.876,87,1.183,88,1.338,89,1.183,90,0.816,91,1.183,92,0.662,93,1.183,94,0.816,95,1.093,96,1.183,97,1.183,125,1.729,131,1.093,147,1.013,191,1.093,211,1.549,212,2.391,213,3.668,215,1.528,223,1.549,225,1.405,227,1.971,242,1.549,281,3.985,296,1.285,297,1.183,304,2.552,312,1.971,330,1.971,347,1.971,348,5.331,349,4.244,350,3.525,351,4.244,352,4.726,353,4.726,354,3.525,355,2.337,356,2.337,357,2.337,358,2.337,359,4.726,360,4.726,361,4.244,362,2.337,363,3.525,364,2.337,365,2.337,366,2.337,367,3.525,368,2.337,369,2.337,370,3.525]],["title/injectables/MessageService.html",[222,1.162,284,2.205]],["body/injectables/MessageService.html",[0,0.083,3,0.189,4,0.189,5,0.189,9,0.448,11,1.673,20,0.811,21,0.659,23,2.152,24,0.811,26,1.338,27,0.028,28,1.315,29,1.164,42,0.514,44,0.217,49,0.011,50,0.016,51,0.011,69,1.248,73,0.875,74,1.347,75,0.448,113,1.347,140,1.584,147,1.248,149,3.462,161,2.131,162,2.131,222,1.435,224,1.909,274,1.731,284,2.723,288,4.039,296,1.584,297,1.457,298,3.04,308,3.865,309,2.428,329,2.428,335,2.428,341,4.039,371,2.428,372,4.109,373,2.88,374,5.223,375,2.88,376,4.109,377,4.109,378,2.88,379,5.523,380,2.88,381,2.88,382,2.88,383,2.88,384,2.88,385,2.88,386,2.88,387,2.88,388,2.88,389,2.88,390,2.88,391,2.88,392,2.88,393,2.88,394,2.88,395,2.88,396,2.88,397,2.88,398,2.88,399,2.88,400,2.88,401,5.223,402,2.88,403,5.223,404,2.88,405,2.88,406,2.88,407,2.88]],["title/classes/ModelBase.html",[0,0.096,8,1.555]],["body/classes/ModelBase.html",[0,0.087,2,1.655,3,0.197,4,0.197,5,0.197,8,1.982,9,0.468,10,1.589,11,2.325,15,2.699,16,3.203,17,3.203,18,3.203,19,3.203,20,1.109,21,0.689,23,2.184,24,1.182,26,0.98,27,0.028,28,1.37,29,0.852,30,1.809,33,3.376,38,3.204,44,0.32,49,0.012,50,0.017,51,0.012,237,1.305,255,3.531,256,2.227,257,3.575,258,3.137,259,2.538,260,2.538,261,3.575,262,2.538,408,4.239,409,3.01,410,3.01,411,3.01,412,3.01,413,3.01]],["title/injectables/NetworkService.html",[222,1.162,414,2.205]],["body/injectables/NetworkService.html",[0,0.096,3,0.218,4,0.218,5,0.218,9,0.516,10,1.7,11,1.805,20,0.896,21,0.76,23,2.305,24,1.02,26,1.683,27,0.027,28,1.375,29,1.285,42,0.486,44,0.25,49,0.013,50,0.018,51,0.013,69,1.378,73,1.008,75,0.516,140,1.825,147,1.439,165,1.825,188,3.007,191,1.552,222,1.584,224,2.2,225,3.108,252,2.456,258,4.305,274,1.995,278,4.359,285,3.825,286,4.685,296,2.495,297,2.296,319,3.825,321,2.798,323,2.798,414,3.007,415,2.798,416,4.537,417,3.319,418,4.537,419,4.537,420,3.825,421,3.319,422,2.798,423,3.319,424,4.537,425,3.319,426,3.319]],["title/classes/Profile.html",[0,0.096,200,1.829]],["body/classes/Profile.html",[0,0.081,2,1.542,3,0.184,4,0.184,5,0.184,7,2.672,8,2.858,9,0.436,10,1.511,11,2.38,15,2.217,16,2.424,17,2.424,18,2.424,19,2.424,20,0.796,21,1.08,23,2.249,24,1.264,27,0.027,28,1.487,33,3.422,34,4.211,35,2.075,36,2.075,37,2.075,38,2.217,39,2.075,40,2.075,41,2.075,42,0.301,43,2.075,44,0.212,45,2.364,49,0.011,50,0.016,51,0.011,200,2.217,427,2.364,428,5.466,429,4.72,430,4.72,431,4.72,432,4.72,433,4.031,434,2.804,435,2.804,436,2.804,437,2.804,438,2.804]],["title/components/ProfileComponent.html",[52,0.708,90,1.162]],["body/components/ProfileComponent.html",[0,0.096,3,0.219,4,0.219,5,0.219,9,0.519,20,0.899,21,1.187,24,0.899,27,0.027,42,0.358,44,0.252,49,0.013,50,0.018,51,0.013,52,1.103,53,0.946,54,1.484,55,1.69,56,1.69,57,1.69,58,1.69,60,1.975,61,2.852,62,1.69,63,3.217,64,2.973,65,2.305,67,2.305,69,1.384,70,3.064,73,1.014,74,1.562,75,0.519,76,3.02,77,1.166,78,2.305,79,2.13,80,1.69,81,2.819,82,1.69,83,1.69,84,1.252,85,1.69,86,1.252,87,1.69,88,0.946,89,1.69,90,1.946,91,1.69,92,0.946,93,1.69,94,1.166,95,1.562,96,1.69,97,1.69,200,3.064,439,2.816,440,5.186,441,4.556,442,3.339,443,3.339]],["title/modules/ProfileModule.html",[98,1.083,444,2.205]],["body/modules/ProfileModule.html",[0,0.098,3,0.222,4,0.222,5,0.222,27,0.027,42,0.601,44,0.255,49,0.013,50,0.018,51,0.013,53,1.805,54,1.7,75,0.526,77,1.181,88,1.805,90,1.605,92,1.805,98,1.101,100,1.268,101,1.711,102,3.138,103,1.86,104,2.033,105,2.263,111,2.763,112,2.033,113,1.581,115,2.149,118,2.241,119,3.4,120,2.241,122,2.149,126,1.362,444,4.421,445,2.852,446,3.382,447,2.852,448,3.382,449,3.632,450,2.502,451,2.852,452,3.382]],["title/modules/ProfileRoutingModule.html",[98,1.083,449,2]],["body/modules/ProfileRoutingModule.html",[0,0.124,3,0.283,4,0.283,5,0.283,27,0.027,42,0.63,44,0.325,49,0.017,50,0.021,51,0.017,52,0.917,75,0.67,90,1.88,100,1.616,105,1.869,115,2.016,122,2.517,126,1.736,128,2.857,129,3.568,130,2.971,131,2.016,132,2.857,133,3.19,138,3.19,449,3.237,451,3.635,453,4.311]],["title/components/RegisterComponent.html",[52,0.708,92,0.942]],["body/components/RegisterComponent.html",[0,0.096,3,0.219,4,0.219,5,0.219,9,0.519,20,0.899,21,1.187,24,0.899,27,0.027,42,0.358,44,0.252,49,0.013,50,0.018,51,0.013,52,1.103,53,0.946,54,1.484,55,1.69,56,1.69,57,1.69,58,1.69,60,1.975,61,2.852,62,1.69,63,3.217,64,2.973,65,2.305,67,2.305,69,1.384,70,3.064,73,1.014,74,1.562,75,0.519,76,3.02,77,1.166,78,2.305,79,2.13,80,1.69,81,2.819,82,1.69,83,1.69,84,1.252,85,1.69,86,1.252,87,1.69,88,0.946,89,1.69,90,1.166,91,1.69,92,1.578,93,1.69,94,1.166,95,1.562,96,1.69,97,1.69,134,4.698,454,2.816,455,5.186,456,4.556,457,3.339,458,3.339]],["title/interceptors/RequestInterceptor.html",[157,2,459,2.461]],["body/interceptors/RequestInterceptor.html",[0,0.1,3,0.227,4,0.227,5,0.227,9,0.539,20,0.923,21,0.794,24,0.923,26,1.523,27,0.027,28,1.296,29,1.324,42,0.607,44,0.262,49,0.014,50,0.019,51,0.014,60,1.504,69,1.42,73,1.054,75,0.539,126,1.883,147,1.504,157,2.811,165,1.908,191,1.622,211,2.3,212,2.864,215,2.027,222,1.633,223,2.3,226,2.926,305,2.086,311,3.913,460,2.926,461,2.926,462,3.943,463,3.47,464,3.943,465,4.772,466,4.772,467,3.47,468,2.926,469,4.46,470,2.926,471,3.943,472,4.676,473,3.47,474,3.47,475,3.47,476,3.47,477,3.47,478,4.676,479,3.47,480,3.47,481,3.47,482,3.47]],["title/interceptors/ResponseInterceptor.html",[158,2,459,2.461]],["body/interceptors/ResponseInterceptor.html",[0,0.097,3,0.221,4,0.221,5,0.221,9,0.524,20,0.905,21,0.772,24,0.905,26,1.493,27,0.027,28,1.05,29,1.299,42,0.647,44,0.254,49,0.013,50,0.018,51,0.013,60,1.461,69,1.393,73,1.024,75,0.524,147,1.461,158,2.757,165,1.854,191,1.576,211,2.234,212,2.83,215,2.424,222,1.601,223,2.234,241,2.494,305,2.027,306,2.843,311,3.856,460,2.843,462,3.867,464,3.867,465,4.716,466,4.716,468,2.843,469,4.394,470,2.843,471,3.867,483,2.843,484,3.371,485,3.371,486,3.371,487,3.371,488,4.586,489,3.371,490,3.371,491,3.371,492,3.371,493,3.371,494,3.371,495,3.371]],["title/components/SearchComponent.html",[52,0.708,94,1.162]],["body/components/SearchComponent.html",[0,0.086,3,0.195,4,0.195,5,0.195,9,0.463,10,1.576,11,1.703,20,0.963,21,0.681,24,0.963,26,0.969,27,0.027,28,0.963,29,0.843,42,0.523,44,0.225,49,0.017,50,0.017,51,0.012,52,1.038,53,0.843,54,1.369,55,1.506,56,1.506,57,1.506,58,1.506,60,1.823,61,2.683,62,1.506,63,3.136,64,2.898,65,2.128,67,2.128,69,1.277,70,2.915,73,0.904,74,1.392,75,0.463,76,2.788,77,1.039,78,2.128,79,1.967,80,1.506,81,2.683,82,1.506,83,1.506,84,1.116,85,1.506,86,1.116,87,1.506,88,0.843,89,1.506,90,1.039,91,1.506,92,0.843,93,1.506,94,1.851,95,2.615,96,1.506,97,1.506,147,1.29,200,2.683,414,3.514,496,2.51,497,4.878,498,4.206,499,4.878,500,2.976,501,4.206,502,3.547,503,2.976,504,2.976,505,2.976,506,2.976,507,2.976]],["title/modules/SearchModule.html",[98,1.083,508,2.205]],["body/modules/SearchModule.html",[0,0.096,3,0.218,4,0.218,5,0.218,27,0.027,42,0.624,44,0.25,49,0.013,50,0.018,51,0.013,53,1.798,54,1.683,75,0.516,77,1.159,88,1.798,92,1.798,94,1.584,98,1.081,100,1.244,101,1.679,102,3.108,103,1.825,104,1.995,105,2.241,111,2.728,112,1.995,113,1.552,115,2.121,118,2.2,119,3.357,120,2.2,122,2.121,126,1.337,164,3.825,165,1.825,508,4.41,509,2.798,510,2.798,511,3.319,512,3.319,513,3.611,514,2.456,515,2.798,516,3.319]],["title/modules/SearchRoutingModule.html",[98,1.083,513,2]],["body/modules/SearchRoutingModule.html",[0,0.124,3,0.283,4,0.283,5,0.283,27,0.027,42,0.63,44,0.325,49,0.017,50,0.021,51,0.017,52,0.917,75,0.67,94,1.88,100,1.616,105,1.869,115,2.016,122,2.517,126,1.736,128,2.857,129,3.568,130,2.971,131,2.016,132,2.857,133,3.19,138,3.19,513,3.237,515,3.635,517,4.311]],["title/injectables/StorageService.html",[222,1.162,518,2.461]],["body/injectables/StorageService.html",[0,0.059,3,0.135,4,0.135,5,0.135,8,0.96,9,0.609,10,1.197,11,1.961,20,0.872,21,0.897,23,2.225,24,1.044,26,1.78,27,0.028,28,1.314,29,1.251,30,1.235,42,0.474,43,1.52,44,0.155,49,0.008,50,0.013,51,0.008,69,0.97,73,1.342,75,0.319,126,1.779,188,3.358,191,2.472,222,1.115,225,3.376,249,3.504,252,3.269,274,1.235,277,4.271,296,1.756,297,2.235,303,4.035,304,1.92,305,1.235,316,2.362,422,5.131,518,2.362,519,1.732,520,5.066,521,3.193,522,3.193,523,3.193,524,3.193,525,3.193,526,2.054,527,2.054,528,2.054,529,2.054,530,2.054,531,5.466,532,2.054,533,2.054,534,2.054,535,2.054,536,2.054,537,2.054,538,3.917,539,2.054,540,2.054,541,2.054,542,2.054,543,2.054,544,2.054,545,2.054,546,2.054,547,3.193,548,3.193,549,2.054,550,2.054,551,2.054,552,2.054,553,2.054,554,2.054,555,2.692,556,2.054,557,2.054,558,2.054,559,2.054,560,2.054,561,2.054,562,3.193,563,2.054,564,3.917,565,2.054,566,2.054,567,2.054,568,2.054,569,2.054,570,2.054]],["title/coverage.html",[571,3.831]],["body/coverage.html",[0,0.157,1,1.209,5,0.183,6,2.352,8,1.304,27,0.027,28,0.639,49,0.011,50,0.016,51,0.011,52,1.246,53,0.79,54,1.532,59,2.352,84,1.046,86,1.046,88,0.79,90,0.974,92,0.79,94,0.974,114,2.064,139,2.352,157,1.677,158,1.677,174,1.677,182,2.064,183,2.352,200,1.534,208,2.064,210,2.352,212,1.411,215,1.209,222,1.798,228,2.352,237,2.04,238,1.849,240,2.972,249,1.849,250,2.352,255,1.849,256,2.972,275,2.352,284,1.849,304,1.677,347,2.352,371,2.352,414,1.849,415,2.352,427,2.352,439,2.352,450,2.064,454,2.352,459,2.972,461,2.352,483,2.352,496,2.352,514,2.064,518,2.064,519,2.352,571,2.352,572,2.789,573,2.789,574,2.789,575,6.8,576,6.103,577,5.855,578,5.992,579,2.789,580,2.789,581,4.016,582,2.789,583,4.016,584,2.789,585,2.789,586,2.789,587,2.789,588,2.789,589,2.352,590,3.386,591,2.352,592,3.386,593,2.352,594,2.352,595,2.789,596,2.789]],["title/dependencies.html",[101,2.025,597,2.776]],["body/dependencies.html",[27,0.027,49,0.016,50,0.02,51,0.016,75,0.622,101,2.026,103,2.202,120,2.654,125,2.962,131,1.872,161,2.962,162,2.962,167,4.332,168,3.405,305,2.407,598,4.003,599,5.501,600,4.003,601,4.003,602,4.003,603,4.003,604,4.003,605,4.003,606,4.003,607,4.003,608,4.003,609,4.003,610,4.003,611,4.003,612,4.003,613,4.003,614,4.003,615,4.003,616,4.003,617,4.003,618,4.003,619,4.003,620,4.003,621,4.003,622,4.003,623,4.003,624,4.003]],["title/miscellaneous/enumerations.html",[625,1.84,626,3.374]],["body/miscellaneous/enumerations.html",[3,0.293,9,0.696,27,0.026,49,0.018,50,0.022,51,0.018,213,3.651,297,3.296,308,4.076,316,4.076,336,5.033,502,4.645,625,2.965,626,3.772,627,5.509,628,4.473,629,4.473,630,4.473,631,5.509,632,5.509,633,4.473,634,4.473,635,4.473]],["title/index.html",[9,0.432,636,2.776,637,2.776]],["body/index.html",[4,0.237,20,0.715,27,0.019,49,0.014,50,0.019,51,0.014,52,1.15,64,1.694,113,1.694,190,3.055,304,2.178,599,3.055,638,3.623,639,4.813,640,3.623,641,5.405,642,5.405,643,3.623,644,3.623,645,4.813,646,5.995,647,6.289,648,3.623,649,3.623,650,3.623,651,3.623,652,3.623,653,3.623,654,3.623,655,3.623,656,3.623,657,3.623,658,5.405,659,5.405,660,3.623,661,5.995,662,3.623,663,3.623,664,3.623,665,3.623,666,3.623,667,3.623,668,3.055,669,4.813,670,4.813,671,5.759,672,3.623,673,4.813,674,4.813,675,3.623,676,5.759,677,3.623,678,3.623,679,5.405,680,3.623,681,3.623,682,3.623,683,2.681,684,3.623,685,3.623,686,3.623]],["title/modules.html",[100,1.703]],["body/modules.html",[27,0.022,49,0.018,50,0.022,51,0.018,99,2.99,100,1.691,110,2.712,150,2.99,156,2.712,168,4.141,444,2.99,449,2.712,508,2.99,513,2.712,687,6.248,688,6.248,689,6.676,690,6.248,691,6.248]],["title/overview.html",[683,3.362]],["body/overview.html",[2,1.526,27,0.027,49,0.011,50,0.016,51,0.011,53,1.81,54,0.904,77,0.969,84,2.191,86,1.759,88,1.81,92,1.81,98,0.904,99,4.235,100,1.04,101,1.404,102,1.668,103,1.526,104,1.668,105,1.203,106,2.34,107,2.34,108,2.34,109,2.34,110,2.821,111,2.405,112,1.668,113,1.298,130,1.404,150,4.235,151,2.34,152,2.34,153,2.34,154,2.34,155,2.34,156,2.821,157,2.821,158,2.821,208,2.053,239,1.839,274,1.668,444,4.235,445,2.34,447,2.34,449,2.821,508,4.235,509,2.34,510,2.34,513,2.821,555,2.34,683,2.053,692,2.775,693,2.775,694,2.775,695,2.775,696,2.775,697,2.775]],["title/routes.html",[130,2.299]],["body/routes.html",[27,0.024,49,0.021,50,0.024,51,0.021,130,2.693]],["title/miscellaneous/variables.html",[625,1.84,698,3.374]],["body/miscellaneous/variables.html",[9,0.587,27,0.027,28,1.454,49,0.015,50,0.02,51,0.015,53,1.07,54,2.03,88,1.07,90,1.319,92,1.07,94,1.319,114,2.795,149,3.279,296,3.429,297,3.155,298,2.795,420,3.185,450,2.795,514,2.795,589,3.185,590,4.936,591,3.185,592,3.185,593,4.171,594,4.171,625,2.503,668,4.171,698,3.185,699,3.777,700,3.777,701,3.777,702,4.947,703,3.777,704,3.777,705,3.777,706,3.777,707,4.947]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0.10.2",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":555,"title":{},"body":{"injectables/StorageService.html":{},"overview.html":{}}}],["1.16.1",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":385,"title":{},"body":{"injectables/MessageService.html":{}}}],["11.0.0",{"_index":599,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.2.3",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":399,"title":{},"body":{"injectables/MessageService.html":{}}}],["16",{"_index":697,"title":{},"body":{"overview.html":{}}}],["2",{"_index":387,"title":{},"body":{"injectables/MessageService.html":{}}}],["2.0.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":696,"title":{},"body":{"overview.html":{}}}],["3.5.1",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":694,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":695,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":693,"title":{},"body":{"overview.html":{}}}],["8",{"_index":692,"title":{},"body":{"overview.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["account'},{'name",{"_index":83,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["account(this.loginform.value['username",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{}}}],["account.component.html",{"_index":68,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.component.scss",{"_index":66,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.username",{"_index":326,"title":{},"body":{"injectables/IdentityService.html":{}}}],["account/account",{"_index":117,"title":{},"body":{"modules/AccountModule.html":{}}}],["account/account.component",{"_index":116,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["account/login/login.component",{"_index":121,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["account/register/register.component",{"_index":123,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["account:10",{"_index":268,"title":{},"body":{"classes/Identity.html":{}}}],["account:11",{"_index":269,"title":{},"body":{"classes/Identity.html":{}}}],["account:12",{"_index":270,"title":{},"body":{"classes/Identity.html":{}}}],["account:13",{"_index":271,"title":{},"body":{"classes/Identity.html":{}}}],["account:14",{"_index":272,"title":{},"body":{"classes/Identity.html":{}}}],["account:15",{"_index":273,"title":{},"body":{"classes/Identity.html":{}}}],["account:4",{"_index":267,"title":{},"body":{"classes/Identity.html":{}}}],["account:5",{"_index":266,"title":{},"body":{"classes/Identity.html":{}}}],["account:6",{"_index":265,"title":{},"body":{"classes/Identity.html":{}}}],["accountcomponent",{"_index":53,"title":{"components/AccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountmodule",{"_index":99,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountroutingmodule",{"_index":110,"title":{"modules/AccountRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["activatedroutesnapshot",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":97,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["angular",{"_index":641,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":120,"title":{},"body":{"modules/AccountModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"modules/SearchModule.html":{}}}],["angular/compiler",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":125,"title":{},"body":{"modules/AccountModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":131,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":64,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":84,"title":{"components/AppComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append(\"authorization",{"_index":474,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["append('content",{"_index":477,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["application/json",{"_index":478,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["appmodule",{"_index":150,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":182,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":156,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":258,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{}}}],["args[key",{"_index":262,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["array",{"_index":544,"title":{},"body":{"injectables/StorageService.html":{}}}],["artifacts",{"_index":662,"title":{},"body":{"index.html":{}}}],["async",{"_index":184,"title":{},"body":{"classes/AppPage.html":{}}}],["authentication",{"_index":631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":174,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authreq",{"_index":480,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["authstate",{"_index":276,"title":{},"body":{"injectables/IdentityService.html":{}}}],["automatically",{"_index":652,"title":{},"body":{"index.html":{}}}],["available",{"_index":691,"title":{},"body":{"modules.html":{}}}],["await",{"_index":547,"title":{},"body":{"injectables/StorageService.html":{}}}],["awesome",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["baseurl",{"_index":278,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["bearer",{"_index":475,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bottom",{"_index":391,"title":{},"body":{"injectables/MessageService.html":{}}}],["break",{"_index":403,"title":{},"body":{"injectables/MessageService.html":{}}}],["browse",{"_index":689,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":192,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":661,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{}}}],["case",{"_index":401,"title":{},"body":{"injectables/MessageService.html":{}}}],["catch(error",{"_index":330,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":654,"title":{},"body":{"index.html":{}}}],["changed",{"_index":315,"title":{},"body":{"injectables/IdentityService.html":{}}}],["check",{"_index":682,"title":{},"body":{"index.html":{}}}],["children",{"_index":133,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/AppPage.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/AppPage.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"overview.html":{}}}],["cli",{"_index":642,"title":{},"body":{"index.html":{}}}],["client",{"_index":638,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["client/header/header.component",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_accountmodule",{"_index":106,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_declarations",{"_index":109,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":107,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":108,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":445,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":448,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_exports",{"_index":446,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_imports",{"_index":447,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":509,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["cluster_searchmodule_declarations",{"_index":512,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_exports",{"_index":511,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":510,"title":{},"body":{"modules/SearchModule.html":{},"overview.html":{}}}],["code",{"_index":656,"title":{},"body":{"index.html":{}}}],["collection",{"_index":520,"title":{},"body":{"injectables/StorageService.html":{}}}],["command",{"_index":684,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":119,"title":{},"body":{"modules/AccountModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{}}}],["component",{"_index":52,"title":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":82,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["components",{"_index":54,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["console.log('authstate",{"_index":314,"title":{},"body":{"injectables/IdentityService.html":{}}}],["const",{"_index":126,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/IdentityService.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"interceptors/RequestInterceptor.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(args",{"_index":257,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["constructor(http",{"_index":417,"title":{},"body":{"injectables/NetworkService.html":{}}}],["constructor(identity",{"_index":211,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["constructor(message",{"_index":283,"title":{},"body":{"injectables/IdentityService.html":{}}}],["constructor(model",{"_index":243,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["constructor(network",{"_index":500,"title":{},"body":{"components/SearchComponent.html":{}}}],["constructor(primengconfig",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["constructor(service",{"_index":373,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(username",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["content",{"_index":194,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":571,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":15,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["credentials",{"_index":334,"title":{},"body":{"injectables/IdentityService.html":{}}}],["crypto",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":557,"title":{},"body":{"injectables/StorageService.html":{}}}],["current.name",{"_index":554,"title":{},"body":{"injectables/StorageService.html":{}}}],["current?.id",{"_index":552,"title":{},"body":{"injectables/StorageService.html":{}}}],["date",{"_index":428,"title":{},"body":{"classes/Profile.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"overview.html":{}}}],["decreasing",{"_index":395,"title":{},"body":{"injectables/MessageService.html":{}}}],["default",{"_index":296,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IKeyValue.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["dependencies",{"_index":101,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":16,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["details",{"_index":429,"title":{},"body":{"classes/Profile.html":{}}}],["dev",{"_index":649,"title":{},"body":{"index.html":{}}}],["development",{"_index":644,"title":{},"body":{"index.html":{}}}],["directive",{"_index":80,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["directives",{"_index":96,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":660,"title":{},"body":{"index.html":{}}}],["directory",{"_index":665,"title":{},"body":{"index.html":{}}}],["dist",{"_index":664,"title":{},"body":{"index.html":{}}}],["docs",{"_index":235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["documentation",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":57,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["dynamic",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":677,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":183,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":189,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":187,"title":{},"body":{"classes/AppPage.html":{}}}],["ease",{"_index":383,"title":{},"body":{"injectables/MessageService.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["element(by.css('app",{"_index":193,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":12,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["end",{"_index":676,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":423,"title":{},"body":{"injectables/NetworkService.html":{}}}],["entries",{"_index":499,"title":{},"body":{"components/SearchComponent.html":{}}}],["enumerations",{"_index":626,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/message.enum",{"_index":309,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["environment",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":336,"title":{},"body":{"injectables/IdentityService.html":{},"miscellaneous/enumerations.html":{}}}],["event",{"_index":491,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["event.headers.get(\"authorization\").replace('bearer",{"_index":495,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["event.headers.has(\"authorization",{"_index":493,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["execute",{"_index":673,"title":{},"body":{"index.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["failure",{"_index":332,"title":{},"body":{"injectables/IdentityService.html":{}}}],["false",{"_index":298,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["files",{"_index":655,"title":{},"body":{"index.html":{}}}],["flag",{"_index":667,"title":{},"body":{"index.html":{}}}],["font",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["foreach(key",{"_index":260,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["formcontrol",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{}}}],["fsevents",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":136,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["further",{"_index":678,"title":{},"body":{"index.html":{}}}],["generate",{"_index":658,"title":{},"body":{"index.html":{}}}],["generated",{"_index":640,"title":{},"body":{"index.html":{}}}],["generateform",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{}}}],["get(`${this.baseurl}/${endpoint",{"_index":425,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getcollection",{"_index":521,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$(key",{"_index":526,"title":{},"body":{"injectables/StorageService.html":{}}}],["getcollection$>(key",{"_index":563,"title":{},"body":{"injectables/StorageService.html":{}}}],["getdata",{"_index":416,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getdata(endpoint",{"_index":419,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getstorage",{"_index":522,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage(key",{"_index":528,"title":{},"body":{"injectables/StorageService.html":{}}}],["getstorage>(key",{"_index":537,"title":{},"body":{"injectables/StorageService.html":{}}}],["getting",{"_index":636,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":185,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":681,"title":{},"body":{"index.html":{}}}],["graph",{"_index":690,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":208,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":209,"title":{},"body":{"guards/AuthGuard.html":{}}}],["header",{"_index":229,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":87,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["header.component.html",{"_index":231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":86,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":472,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["help",{"_index":679,"title":{},"body":{"index.html":{}}}],["helpers/key.value",{"_index":536,"title":{},"body":{"injectables/StorageService.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["http",{"_index":285,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["http://localhost:4200",{"_index":651,"title":{},"body":{"index.html":{}}}],["http://localhost:5000/api",{"_index":424,"title":{},"body":{"injectables/NetworkService.html":{}}}],["http://localhost:5000/api/auth",{"_index":300,"title":{},"body":{"injectables/IdentityService.html":{}}}],["http_interceptors",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":286,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["httpclientmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/SearchModule.html":{}}}],["httpevent",{"_index":470,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httphandler",{"_index":466,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpinterceptor",{"_index":471,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httprequest",{"_index":465,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["httpresponse",{"_index":488,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["id",{"_index":17,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["identifier",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":215,"title":{"classes/Identity.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["identityservice",{"_index":212,"title":{"injectables/IdentityService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["iidentity",{"_index":238,"title":{"interfaces/IIdentity.html":{}},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{},"coverage.html":{}}}],["ikeyvalue",{"_index":249,"title":{"interfaces/IKeyValue.html":{}},"body":{"interfaces/IKeyValue.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["imodelbase",{"_index":255,"title":{"interfaces/IModelBase.html":{}},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["implements",{"_index":60,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{}}}],["import('./account/account.module').then(m",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then(m",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./search/search.module",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["incredi",{"_index":234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":251,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["injectable",{"_index":222,"title":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["injectables",{"_index":274,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"overview.html":{}}}],["instanceof",{"_index":492,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["intercept",{"_index":462,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["intercept(req",{"_index":464,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interceptor",{"_index":459,"title":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":460,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["interface",{"_index":237,"title":{"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{}},"body":{"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["interfaces",{"_index":239,"title":{},"body":{"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"overview.html":{}}}],["invalid",{"_index":333,"title":{},"body":{"injectables/IdentityService.html":{}}}],["isactive",{"_index":18,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["isdefault",{"_index":19,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["item",{"_index":568,"title":{},"body":{"injectables/StorageService.html":{}}}],["item?.id",{"_index":551,"title":{},"body":{"injectables/StorageService.html":{}}}],["item?.name",{"_index":553,"title":{},"body":{"injectables/StorageService.html":{}}}],["item[key",{"_index":543,"title":{},"body":{"injectables/StorageService.html":{}}}],["jquery",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem('identity",{"_index":317,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":539,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(identity",{"_index":344,"title":{},"body":{"injectables/IdentityService.html":{}}}],["json.stringify(storage",{"_index":570,"title":{},"body":{"injectables/StorageService.html":{}}}],["karma",{"_index":675,"title":{},"body":{"index.html":{}}}],["key",{"_index":252,"title":{},"body":{"interfaces/IKeyValue.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"overview.html":{}}}],["lifecycle",{"_index":632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":420,"title":{},"body":{"injectables/NetworkService.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.removeitem('identity",{"_index":345,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem('identity",{"_index":343,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem(key",{"_index":569,"title":{},"body":{"injectables/StorageService.html":{}}}],["login",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":89,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["login.component.html",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":88,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loginform",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{}}}],["logscope",{"_index":627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m.accountmodule",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilemodule",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.searchmodule",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map(item",{"_index":542,"title":{},"body":{"injectables/StorageService.html":{}}}],["matching",{"_index":50,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":288,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messageservice",{"_index":284,"title":{"injectables/MessageService.html":{}},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messagetype",{"_index":308,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["messagetype.error",{"_index":335,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.info",{"_index":341,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.success",{"_index":329,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{}}}],["messagetype.warning",{"_index":406,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata",{"_index":62,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["methods",{"_index":69,"title":{},"body":{"components/AccountComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["miscellaneous",{"_index":625,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":264,"title":{},"body":{"classes/Identity.html":{}}}],["model.token",{"_index":248,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["model?.email",{"_index":246,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["model?.password",{"_index":245,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["modelbase",{"_index":8,"title":{"classes/ModelBase.html":{}},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["modelbase:10",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:11",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:12",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:13",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:14",{"_index":40,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["modelbase:15",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"classes/Profile.html":{}}}],["models/account.model",{"_index":242,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{}}}],["models/base.model",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["models/identity.model",{"_index":306,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/ResponseInterceptor.html":{}}}],["models/profile.model",{"_index":504,"title":{},"body":{"components/SearchComponent.html":{}}}],["module",{"_index":98,"title":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"overview.html":{}}}],["modules",{"_index":100,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":680,"title":{},"body":{"index.html":{}}}],["multi",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["navigate",{"_index":650,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":186,"title":{},"body":{"classes/AppPage.html":{}}}],["network",{"_index":502,"title":{},"body":{"components/SearchComponent.html":{},"miscellaneous/enumerations.html":{}}}],["networkservice",{"_index":414,"title":{"injectables/NetworkService.html":{}},"body":{"injectables/NetworkService.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["new",{"_index":304,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":311,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["next(await",{"_index":560,"title":{},"body":{"injectables/StorageService.html":{}}}],["next.handle(authreq",{"_index":482,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":489,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["ng",{"_index":647,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":122,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["ngoninit",{"_index":70,"title":{},"body":{"components/AccountComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["ngx",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["null",{"_index":319,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["number",{"_index":33,"title":{},"body":{"classes/Account.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"classes/ModelBase.html":{},"classes/Profile.html":{}}}],["object",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this",{"_index":259,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["object.keys(values",{"_index":541,"title":{},"body":{"injectables/StorageService.html":{}}}],["observable",{"_index":469,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["oninit",{"_index":61,"title":{},"body":{"components/AccountComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["onsubmit",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/IIdentity.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":683,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":597,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":686,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["params",{"_index":426,"title":{},"body":{"injectables/NetworkService.html":{}}}],["parentid",{"_index":430,"title":{},"body":{"classes/Profile.html":{}}}],["parentname",{"_index":431,"title":{},"body":{"classes/Profile.html":{}}}],["password",{"_index":13,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{}}}],["path",{"_index":132,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["pathmatch",{"_index":135,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["popper.js",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["post(`${this.baseurl}/login",{"_index":322,"title":{},"body":{"injectables/IdentityService.html":{}}}],["post(`${this.baseurl}/logout",{"_index":339,"title":{},"body":{"injectables/IdentityService.html":{}}}],["primeicons",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["primengconfig",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{}}}],["prod",{"_index":666,"title":{},"body":{"index.html":{}}}],["production",{"_index":668,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":200,"title":{"classes/Profile.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":91,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["profile.component.html",{"_index":441,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":440,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile",{"_index":452,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/profile.component",{"_index":451,"title":{},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{}}}],["profilecomponent",{"_index":90,"title":{"components/ProfileComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilemodule",{"_index":444,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileroutingmodule",{"_index":449,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["project",{"_index":639,"title":{},"body":{"index.html":{}}}],["promise",{"_index":188,"title":{},"body":{"classes/AppPage.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{}}}],["promise.resolve().then(async",{"_index":538,"title":{},"body":{"injectables/StorageService.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["protractor",{"_index":190,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"overview.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["put(`${this.baseurl}/auth",{"_index":337,"title":{},"body":{"injectables/IdentityService.html":{}}}],["reactiveformsmodule",{"_index":124,"title":{},"body":{"modules/AccountModule.html":{}}}],["readonly",{"_index":277,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["redirectto",{"_index":137,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["reference",{"_index":685,"title":{},"body":{"index.html":{}}}],["register",{"_index":134,"title":{},"body":{"modules/AccountRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":93,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["register.component.html",{"_index":456,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":455,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":92,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":653,"title":{},"body":{"index.html":{}}}],["repo",{"_index":236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["req",{"_index":468,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["req.clone",{"_index":481,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.headers",{"_index":473,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["req.headers.append('content",{"_index":479,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["requestinterceptor",{"_index":157,"title":{"interceptors/RequestInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/RequestInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["require",{"_index":594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":112,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"overview.html":{}}}],["responseinterceptor",{"_index":158,"title":{"interceptors/ResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ResponseInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":49,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":51,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":191,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/NetworkService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/StorageService.html":{}}}],["returns",{"_index":73,"title":{},"body":{"components/AccountComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{}}}],["right",{"_index":392,"title":{},"body":{"injectables/MessageService.html":{}}}],["root",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{}}}],["root'},{'name",{"_index":85,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["route",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["routermodule",{"_index":129,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":138,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":130,"title":{"routes.html":{}},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":118,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{}}}],["routing.module.ts",{"_index":128,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SearchRoutingModule.html":{}}}],["run",{"_index":646,"title":{},"body":{"index.html":{}}}],["running",{"_index":669,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":305,"title":{},"body":{"injectables/IdentityService.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":487,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["scaffolding",{"_index":657,"title":{},"body":{"index.html":{}}}],["search",{"_index":95,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["search.component.html",{"_index":498,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":497,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search",{"_index":516,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.component",{"_index":515,"title":{},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{}}}],["searchcomponent",{"_index":94,"title":{"components/SearchComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchmodule",{"_index":508,"title":{"modules/SearchModule.html":{}},"body":{"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["searchroutingmodule",{"_index":513,"title":{"modules/SearchRoutingModule.html":{}},"body":{"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["selector",{"_index":63,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["serve",{"_index":648,"title":{},"body":{"index.html":{}}}],["server",{"_index":645,"title":{},"body":{"index.html":{}}}],["service",{"_index":376,"title":{},"body":{"injectables/MessageService.html":{}}}],["services/auth.guard",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["services/identity.service",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{}}}],["services/message.service",{"_index":307,"title":{},"body":{"injectables/IdentityService.html":{}}}],["services/network.service",{"_index":505,"title":{},"body":{"components/SearchComponent.html":{}}}],["services/request.interceptor",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["services/response.interceptor",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["setidentity",{"_index":279,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setidentity(identity",{"_index":289,"title":{},"body":{"injectables/IdentityService.html":{}}}],["setstorage",{"_index":523,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage(key",{"_index":530,"title":{},"body":{"injectables/StorageService.html":{}}}],["setstorage>(key",{"_index":565,"title":{},"body":{"injectables/StorageService.html":{}}}],["show",{"_index":372,"title":{},"body":{"injectables/MessageService.html":{}}}],["show(title",{"_index":377,"title":{},"body":{"injectables/MessageService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"components/RegisterComponent.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"modules/SearchModule.html":{},"modules/SearchRoutingModule.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["span')).gettext",{"_index":195,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../account.module.ts",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.scope.enum.ts",{"_index":628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../message.enum.ts",{"_index":629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../profile.module.ts",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../search.module.ts",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account/account",{"_index":127,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["src/app/account/account.component.ts",{"_index":59,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/account/account.component.ts:10",{"_index":72,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:8",{"_index":71,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.module.ts",{"_index":114,"title":{},"body":{"modules/AccountModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/account/login/login.component.ts",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/account/login/login.component.ts:13",{"_index":354,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login/login.component.ts:15",{"_index":356,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login/login.component.ts:16",{"_index":355,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login/login.component.ts:22",{"_index":357,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login/login.component.ts:27",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/register/register.component.ts",{"_index":454,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/account/register/register.component.ts:10",{"_index":458,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register/register.component.ts:8",{"_index":457,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/app",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/header/header.component.ts",{"_index":228,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:10",{"_index":233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:8",{"_index":232,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/profile/profile",{"_index":453,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/profile/profile.component.ts",{"_index":439,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:10",{"_index":443,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:8",{"_index":442,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.module.ts",{"_index":450,"title":{},"body":{"modules/ProfileModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/search/search",{"_index":517,"title":{},"body":{"modules/SearchRoutingModule.html":{}}}],["src/app/search/search.component.ts",{"_index":496,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts:11",{"_index":501,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.component.ts:13",{"_index":503,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/search/search.module.ts",{"_index":514,"title":{},"body":{"modules/SearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/enums/log.scope.enum.ts",{"_index":630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enums/message.enum.ts",{"_index":633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/helpers/key.value.ts",{"_index":250,"title":{},"body":{"interfaces/IKeyValue.html":{},"coverage.html":{}}}],["src/common/helpers/key.value.ts:1",{"_index":254,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["src/common/models/account.model.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["src/common/models/account.model.ts:4",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["src/common/models/account.model.ts:5",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["src/common/models/account.model.ts:6",{"_index":25,"title":{},"body":{"classes/Account.html":{}}}],["src/common/models/base.model.ts",{"_index":256,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{},"coverage.html":{}}}],["src/common/models/base.model.ts:10",{"_index":409,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/common/models/base.model.ts:11",{"_index":410,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/common/models/base.model.ts:12",{"_index":411,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/common/models/base.model.ts:13",{"_index":412,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/common/models/base.model.ts:14",{"_index":413,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/common/models/base.model.ts:15",{"_index":408,"title":{},"body":{"classes/ModelBase.html":{}}}],["src/common/models/identity.model.ts",{"_index":240,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{},"coverage.html":{}}}],["src/common/models/identity.model.ts:10",{"_index":263,"title":{},"body":{"classes/Identity.html":{}}}],["src/common/models/profile.model.ts",{"_index":427,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/common/models/profile.model.ts:4",{"_index":434,"title":{},"body":{"classes/Profile.html":{}}}],["src/common/models/profile.model.ts:5",{"_index":435,"title":{},"body":{"classes/Profile.html":{}}}],["src/common/models/profile.model.ts:6",{"_index":436,"title":{},"body":{"classes/Profile.html":{}}}],["src/common/models/profile.model.ts:7",{"_index":437,"title":{},"body":{"classes/Profile.html":{}}}],["src/common/models/profile.model.ts:8",{"_index":438,"title":{},"body":{"classes/Profile.html":{}}}],["src/common/models/profile.model.ts:9",{"_index":433,"title":{},"body":{"classes/Profile.html":{}}}],["src/common/services/auth.guard.ts",{"_index":210,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/common/services/auth.guard.ts:6",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/services/auth.guard.ts:9",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/common/services/identity.service.ts",{"_index":275,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/common/services/identity.service.ts:12",{"_index":301,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:14",{"_index":299,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:15",{"_index":302,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:16",{"_index":287,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:34",{"_index":292,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:48",{"_index":295,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:57",{"_index":293,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/identity.service.ts:64",{"_index":290,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/common/services/message.service.ts",{"_index":371,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/common/services/message.service.ts:23",{"_index":378,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/common/services/message.service.ts:6",{"_index":375,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/common/services/network.service.ts",{"_index":415,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/common/services/network.service.ts:6",{"_index":418,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/common/services/network.service.ts:8",{"_index":421,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/common/services/request.interceptor.ts",{"_index":461,"title":{},"body":{"interceptors/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/services/request.interceptor.ts:10",{"_index":467,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/common/services/request.interceptor.ts:7",{"_index":463,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["src/common/services/response.interceptor.ts",{"_index":483,"title":{},"body":{"interceptors/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/services/response.interceptor.ts:12",{"_index":485,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["src/common/services/response.interceptor.ts:9",{"_index":484,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["src/common/services/storage.service.ts",{"_index":519,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/common/services/storage.service.ts:14",{"_index":529,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/common/services/storage.service.ts:26",{"_index":534,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/common/services/storage.service.ts:40",{"_index":527,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/common/services/storage.service.ts:46",{"_index":532,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/common/services/storage.service.ts:8",{"_index":535,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/common/services/storage.service.ts:9",{"_index":525,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/environments/environment.prod.ts",{"_index":589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":637,"title":{"index.html":{}},"body":{}}],["state",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":316,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{}}}],["storage.filter(value",{"_index":562,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.findindex(item",{"_index":550,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.push(current",{"_index":558,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage.splice(index",{"_index":556,"title":{},"body":{"injectables/StorageService.html":{}}}],["storage[item.name",{"_index":567,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":518,"title":{"injectables/StorageService.html":{}},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["stored",{"_index":663,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"interfaces/IKeyValue.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"injectables/StorageService.html":{}}}],["styles",{"_index":56,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["styleurls",{"_index":65,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["subject",{"_index":303,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/StorageService.html":{}}}],["success",{"_index":634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":338,"title":{},"body":{"injectables/IdentityService.html":{}}}],["sum",{"_index":432,"title":{},"body":{"classes/Profile.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Profile.html":{}}}],["super(model?.username",{"_index":244,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["support",{"_index":687,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":688,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":400,"title":{},"body":{"injectables/MessageService.html":{}}}],["t",{"_index":422,"title":{},"body":{"injectables/NetworkService.html":{},"injectables/StorageService.html":{}}}],["table",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":486,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["tap(event",{"_index":490,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["template",{"_index":55,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["templateurl",{"_index":67,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["test",{"_index":672,"title":{},"body":{"index.html":{}}}],["tests",{"_index":671,"title":{},"body":{"index.html":{}}}],["then((result",{"_index":324,"title":{},"body":{"injectables/IdentityService.html":{}}}],["then(m",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["then(result",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authstate",{"_index":318,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.collection$[key",{"_index":564,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key",{"_index":540,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.collection[key].slice",{"_index":545,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.email",{"_index":48,"title":{},"body":{"classes/Account.html":{}}}],["this.entries",{"_index":507,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.generateform",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.getcollection$(key",{"_index":559,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.getstorage(key",{"_index":548,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.http",{"_index":321,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["this.identity",{"_index":312,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{}}}],["this.identity$.next(identity",{"_index":346,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.next(storage",{"_index":320,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity$.subscribe",{"_index":310,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.identity.authstate",{"_index":226,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/RequestInterceptor.html":{}}}],["this.identity.identity.token",{"_index":476,"title":{},"body":{"interceptors/RequestInterceptor.html":{}}}],["this.identity.setidentity(new",{"_index":494,"title":{},"body":{"interceptors/ResponseInterceptor.html":{}}}],["this.identity.userlogout",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.identity.username",{"_index":325,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.loginform",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value['password",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.message.show('login",{"_index":331,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('signing",{"_index":340,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.message.show('success",{"_index":327,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.network.getdata('profiles').then(result",{"_index":506,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.password",{"_index":47,"title":{},"body":{"classes/Account.html":{}}}],["this.primengconfig.ripple",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['account",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['search",{"_index":313,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.service.error(message",{"_index":402,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.info(message",{"_index":404,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.success(message",{"_index":405,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.autodismiss",{"_index":380,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.closebutton",{"_index":381,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.easing",{"_index":382,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.extendedtimeout",{"_index":384,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.maxopened",{"_index":386,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.newestontop",{"_index":388,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.positionclass",{"_index":389,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.preventduplicates",{"_index":393,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressanimation",{"_index":394,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressbar",{"_index":396,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.taptodismiss",{"_index":397,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.timeout",{"_index":398,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.warning(message",{"_index":407,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.setidentity",{"_index":342,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.setstorage(key",{"_index":561,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.token",{"_index":247,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{}}}],["this.username",{"_index":46,"title":{},"body":{"classes/Account.html":{}}}],["this[key",{"_index":261,"title":{},"body":{"interfaces/IModelBase.html":{},"classes/ModelBase.html":{}}}],["title",{"_index":379,"title":{},"body":{"injectables/MessageService.html":{}}}],["tmodel",{"_index":253,"title":{},"body":{"interfaces/IKeyValue.html":{}}}],["toast",{"_index":390,"title":{},"body":{"injectables/MessageService.html":{}}}],["toastr",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":374,"title":{},"body":{"injectables/MessageService.html":{}}}],["token",{"_index":241,"title":{},"body":{"interfaces/IIdentity.html":{},"classes/Identity.html":{},"interceptors/ResponseInterceptor.html":{}}}],["topromise",{"_index":323,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/NetworkService.html":{}}}],["tree",{"_index":58,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["true",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/Account.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/IIdentity.html":{},"interfaces/IModelBase.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"classes/ModelBase.html":{},"injectables/NetworkService.html":{},"classes/Profile.html":{},"interceptors/RequestInterceptor.html":{},"interceptors/ResponseInterceptor.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":670,"title":{},"body":{"index.html":{}}}],["updatestorage",{"_index":524,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage(key",{"_index":533,"title":{},"body":{"injectables/StorageService.html":{}}}],["updatestorage>(key",{"_index":546,"title":{},"body":{"injectables/StorageService.html":{}}}],["use",{"_index":659,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{}}}],["userlogin",{"_index":280,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(account",{"_index":291,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(new",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{}}}],["userlogout",{"_index":281,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{}}}],["username",{"_index":14,"title":{},"body":{"classes/Account.html":{},"interfaces/IIdentity.html":{},"classes/Identity.html":{},"components/LoginComponent.html":{}}}],["userregister",{"_index":282,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userregister(account",{"_index":294,"title":{},"body":{"injectables/IdentityService.html":{}}}],["validators",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":297,"title":{},"body":{"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"injectables/StorageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":531,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(current",{"_index":549,"title":{},"body":{"injectables/StorageService.html":{}}}],["values.foreach(item",{"_index":566,"title":{},"body":{"injectables/StorageService.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["variable",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":698,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":643,"title":{},"body":{"index.html":{}}}],["via",{"_index":674,"title":{},"body":{"index.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/AccountComponent.html":{},"components/HeaderComponent.html":{},"injectables/IdentityService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["warning",{"_index":635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["welcome",{"_index":328,"title":{},"body":{"injectables/IdentityService.html":{}}}],["works",{"_index":76,"title":{},"body":{"components/AccountComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{}}}],["yes",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/Identity.html":{},"injectables/IdentityService.html":{},"classes/ModelBase.html":{},"injectables/StorageService.html":{}}}],["zone.js",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":111,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/SearchModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/account.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username?: string, password?: string, email?: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/account.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/account.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/account.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/account.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model'\n\nexport class Account extends ModelBase {\n  public username: string;\n  public password: string;\n  public email   : string;\n  // ======================================= //\n  constructor(username?: string, password?: string, email?: string) {\n    super();\n    this.username = username ?? username;\n    this.password = password ?? password;\n    this.email    = email    ?? email   ;\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/account.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account\n            \n\n            \n                styleUrls\n                ./account.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/account/account.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  account works!\n\n\n    \n\n    \n                \n                    ./account.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  account works!'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_declarations\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountComponent->AccountModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAccountModule -->\n\nLoginComponent->AccountModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAccountModule -->\n\nRegisterComponent->AccountModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nAccountModule->AccountComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAccountModule->LoginComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nAccountModule->RegisterComponent \n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AccountComponent     } from '@account/account.component'\nimport { AccountRoutingModule } from '@account/account-routing.module'\nimport { CommonModule         } from '@angular/common'\nimport { LoginComponent       } from '@account/login/login.component'\nimport { NgModule             } from '@angular/core'\nimport { RegisterComponent    } from '@account/register/register.component'\nimport { ReactiveFormsModule } from '@angular/forms'\n\nconst components = [AccountComponent, LoginComponent, RegisterComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [components],\n  exports: [components]\n})\nexport class AccountModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountRoutingModule.html":{"url":"modules/AccountRoutingModule.html","title":"module - AccountRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AccountComponent          } from '@account/account.component'\nimport { LoginComponent            } from '@account/login/login.component'\nimport { RegisterComponent         } from '@account/register/register.component'\nimport { NgModule                  } from '@angular/core'\nimport { RouterModule     , Routes } from '@angular/router'\n\nconst routes: Routes = [\n  {\n    path: '', component: AccountComponent, children: [\n      { path: '', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: '**', pathMatch: 'full', redirectTo: '' },\n    ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private primengConfig: PrimeNGConfig) { this.primengConfig.ripple = true; }\n}\n\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nAppModule -->\n\nRequestInterceptor->AppModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nAppModule -->\n\nResponseInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RequestInterceptor\n                        \n                        \n                            ResponseInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ToastrModule                              } from 'ngx-toastr'\nimport { HTTP_INTERCEPTORS      , HttpClientModule } from '@angular/common/http'\nimport { NgModule                                  } from '@angular/core'\nimport { BrowserModule                             } from '@angular/platform-browser'\nimport { BrowserAnimationsModule                   } from '@angular/platform-browser/animations'\nimport { AppRoutingModule                          } from '@client/app-routing.module'\nimport { AppComponent                              } from '@client/app.component'\nimport { HeaderComponent                           } from '@client/header/header.component'\nimport { AuthGuard                                 } from '@services/auth.guard'\nimport { RequestInterceptor                        } from '@services/request.interceptor'\nimport { ResponseInterceptor                       } from '@services/response.interceptor'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n    AuthGuard,\n    { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ResponseInterceptor, multi: true },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTitleText\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AuthGuard } from '@services/auth.guard';\nimport { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nconst routes: Routes = [\n  { path: 'account', loadChildren: () => \"import('./account/account.module').then(m => m.AccountModule)\"                           },\n  { path: 'profile', loadChildren: () => \"import('./profile/profile.module').then(m => m.ProfileModule)\", canActivate: [AuthGuard] },\n  { path: 'search' , loadChildren: () => \"import('./search/search.module'  ).then(m => m.SearchModule )\", canActivate: [AuthGuard] },\n  { path: '**', pathMatch: 'full', redirectTo: 'search' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/services/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/auth.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { IdentityService } from '@services/identity.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private identity: IdentityService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.identity.authState) {\n      this.router.navigate(['account']);\n    }\n    return this.identity.authState;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n   InCredi\n  \n  \n    \n      \n        Search\n      \n      \n        Docs\n      \n      \n        Repo\n      \n    \n    \n      \n      \n        Search\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   InCredi                      Search                    Docs                    Repo                                  Search            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIdentity.html":{"url":"interfaces/IIdentity.html","title":"interface - IIdentity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IIdentity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/identity.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                            Optional\n                                        token\n                                \n                                \n                                            Optional\n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '@models/account.model'\nexport interface IIdentity {\n  token?: string;\n  username?: string;\n  password?: string;\n  email?: string;\n}\n\nexport class Identity extends Account {\n  public token: string;\n  // ======================================= //\n  constructor(model?: IIdentity) {\n    super(model?.username, model?.password, model?.email);\n    this.token = model.token;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyValue.html":{"url":"interfaces/IKeyValue.html","title":"interface - IKeyValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/helpers/key.value.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    TModel\n\n                    \n                \n                        \n                            \n                                Defined in src/common/helpers/key.value.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyValue {\n  // ======================================= //\n  [ key: string ]: TModel;\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModelBase.html":{"url":"interfaces/IModelBase.html","title":"interface - IModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        isActive\n                                \n                                \n                                            Optional\n                                        isDefault\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDefault\n                                    \n                                \n                                \n                                    \n                                        isDefault:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IModelBase {\n  description ?: string ;\n  id          ?: number ;\n  isActive    ?: boolean;\n  isDefault   ?: boolean;\n  name        ?: string ;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public created     : number ;\n  public description : string ;\n  public id          : number ;\n  public isActive    : boolean;\n  public isDefault   : boolean;\n  public name        : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identity.html":{"url":"classes/Identity.html","title":"class - Identity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/identity.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model?: IIdentity)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/identity.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        IIdentity\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/identity.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         Account\n\n                                \n                            \n                        \n                            \n                                    Defined in         Account:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Account } from '@models/account.model'\nexport interface IIdentity {\n  token?: string;\n  username?: string;\n  password?: string;\n  email?: string;\n}\n\nexport class Identity extends Account {\n  public token: string;\n  // ======================================= //\n  constructor(model?: IIdentity) {\n    super(model?.username, model?.password, model?.email);\n    this.token = model.token;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/identity.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authState\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Public\n                                identity\n                            \n                            \n                                    Public\n                                identity$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setIdentity\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                            \n                                    Public\n                                userRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: MessageService, http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/identity.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIdentity(identity?: Identity)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/identity.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                Identity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/identity.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/identity.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegister(account: Account)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/identity.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/identity.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000/api/auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/identity.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Identity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/identity.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identity$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/identity.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Account } from '@models/account.model'\nimport { Identity } from '@models/identity.model'\nimport { MessageService } from '@services/message.service'\nimport { MessageType } from '@enums/message.enum'\nimport { Router } from '@angular/router'\n\n@Injectable({ providedIn: 'root' })\nexport class IdentityService {\n  private readonly baseUrl: string = 'http://localhost:5000/api/auth';\n  // ======================================= //\n  public authState: boolean = false;\n  public identity: Identity;\n  public identity$: Subject = new Subject();\n  // ======================================= //\n  constructor(private message: MessageService, private http: HttpClient, private router: Router) {\n    this.identity$.subscribe({\n      next: result => {\n        this.identity = result;\n        this.router.navigate(['search']);\n        console.log('AuthState Changed =>', result);\n      }\n    });\n\n    const storage: Identity = JSON.parse(localStorage.getItem('identity')) as Identity;\n    this.authState = storage != null;\n    if (storage && !this.identity) {\n      this.identity$.next(storage);\n    }\n  }\n  // ======================================= //\n  public userLogin(account: Account): Promise {\n    return this.http\n      .post(`${this.baseUrl}/login`, account)\n      .toPromise()\n      .then((result) => {\n        this.identity.username = account.username;\n        this.message.show('Success!', `Welcome ${account.username}`, MessageType.Success);\n        return result;\n      })\n      .catch(error => {\n        this.message.show('Login failure!', 'Invalid credentials', MessageType.Error);\n        return error;\n      })\n  }\n  public userRegister(account: Account): Promise {\n    return this.http\n      .put(`${this.baseUrl}/auth`, account)\n      .toPromise()\n      .then((result) => {\n        this.message.show('Success!', `Account successfully created`, MessageType.Success)\n        return result;\n      });\n  }\n  public userLogout(): Promise {\n    return this.http\n      .post(`${this.baseUrl}/logout`, null)\n      .toPromise()\n      .then(() => this.message.show('Signing Out', '', MessageType.Info))\n      .then(() => this.setIdentity());\n  }\n  public setIdentity(identity?: Identity) {\n    identity\n      ? localStorage.setItem('identity', JSON.stringify(identity))\n      : localStorage.removeItem('identity');\n    this.authState = identity != null;\n    this.identity$.next(identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/login/login.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/login/login.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/login/login.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/login/login.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.generateForm()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Account } from '@models/account.model';\nimport { IdentityService } from '@services/identity.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup = this.generateForm();\n  constructor(private identity: IdentityService, private router: Router) { }\n  ngOnInit() { }\n  public generateForm() {\n    return new FormGroup({\n      'username': new FormControl('', Validators.required),\n      'password': new FormControl('', Validators.required)\n    });\n  }\n  public onSubmit() {\n    this.identity\n      .userLogin(new Account(this.loginForm.value['username'], this.loginForm.value['password']))\n      .catch(error => this.loginForm = this.generateForm());\n  }\n  public userLogout() {\n    this.identity.userLogout()\n      .then(result => {\n        this.loginForm = this.generateForm();\n        this.router.navigate(['account']);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      User Login\n    \n    \n      \n        \n          Username\n          \n        \n        \n          Password\n          \n        \n        \n           Login\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                User Login                                Username                                    Password                                     Login                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/message.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(title: string, message: string, type: MessageType)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/message.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                MessageType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        MessageType.Info\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ToastrService } from 'ngx-toastr'\nimport { Injectable    } from '@angular/core'\nimport { MessageType   } from '@enums/message.enum'\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  // ======================================= //\n  constructor(private service: ToastrService) {\n    this.service.toastrConfig.autoDismiss       = true                ;\n    this.service.toastrConfig.closeButton       = true                ;\n    this.service.toastrConfig.easing            = 'ease-in-out'       ;\n    this.service.toastrConfig.extendedTimeOut   = 1000                ;\n    this.service.toastrConfig.maxOpened         = 2                   ;\n    this.service.toastrConfig.newestOnTop       = false               ;\n    this.service.toastrConfig.positionClass     = 'toast-bottom-right';\n    this.service.toastrConfig.preventDuplicates = false               ;\n    this.service.toastrConfig.progressAnimation = 'decreasing'        ;\n    this.service.toastrConfig.progressBar       = true                ;\n    this.service.toastrConfig.tapToDismiss      = true                ;\n    this.service.toastrConfig.timeOut           = 1500                ;\n  }\n  // ======================================= //\n  public show(title: string, message: string, type: MessageType = MessageType.Info) {\n    switch (type) {\n      case MessageType.Error:\n        this.service.error(message, title);\n        break;\n      case MessageType.Info:\n        this.service.info(message, title);\n        break;\n      case MessageType.Success:\n        this.service.success(message, title);\n        break;\n      case MessageType.Warning:\n        this.service.warning(message, title);\n        break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelBase.html":{"url":"classes/ModelBase.html","title":"class - ModelBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IModelBase)\n                    \n                \n                        \n                            \n                                Defined in src/common/models/base.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IModelBase\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/base.model.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IModelBase {\n  description ?: string ;\n  id          ?: number ;\n  isActive    ?: boolean;\n  isDefault   ?: boolean;\n  name        ?: string ;\n}\nexport class ModelBase> {\n  // ======================================= //\n  public created     : number ;\n  public description : string ;\n  public id          : number ;\n  public isActive    : boolean;\n  public isDefault   : boolean;\n  public name        : string ;\n  // ======================================= //\n  constructor(args?: IModelBase) {\n    args ?? Object.keys(this)\n      .forEach(key => this[key] = this[key] ?? args[key]);\n  }\n  // ======================================= //\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/network.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/network.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData(endpoint: string, args: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/network.service.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5000/api'\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/network.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\n\n@Injectable({ providedIn: 'root' })\nexport class NetworkService {\n  private baseUrl: string = 'http://localhost:5000/api';\n  constructor(private http: HttpClient) { }\n  public getData(endpoint: string, args: { [key: string]: string } = null): Promise {\n    return this.http\n      .get(`${this.baseUrl}/${endpoint}`, args ? { params: args } : {})\n      .toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/models/profile.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ModelBase\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                details\n                            \n                            \n                                    Public\n                                parentId\n                            \n                            \n                                    Public\n                                parentName\n                            \n                            \n                                    Public\n                                sum\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                created\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                isDefault\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/models/profile.model.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/profile.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/profile.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/profile.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/profile.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/profile.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/models/profile.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ModelBase\n\n                                \n                            \n                        \n                            \n                                    Defined in         ModelBase:15\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ModelBase } from '@models/base.model';\n\nexport class Profile extends ModelBase {\n  public date      : Date  ;\n  public details   : string;\n  public parentId  : number;\n  public parentName: string;\n  public sum       : number;\n  public type      : string;\n  // ======================================= //\n  constructor() { super(); }\n  // ======================================= //\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  profile works!\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  profile works!'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_declarations\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nAccountComponent->ProfileModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nProfileModule -->\n\nLoginComponent->ProfileModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nProfileModule -->\n\nRegisterComponent->ProfileModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nProfileModule->AccountComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nProfileModule->LoginComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nProfileModule->RegisterComponent \n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { ProfileComponent     } from '@profile/profile.component'\nimport { ProfileRoutingModule } from '@profile/profile-routing.module'\n\nconst components = [ProfileComponent];\n@NgModule({\n  imports: [\n    CommonModule,\n    ProfileRoutingModule\n  ],\n  declarations: [components],\n  exports: [components]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/profile/profile-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from '@profile/profile.component';\n\nconst routes: Routes = [\n  { path: '', component: ProfileComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/account/register/register.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/register/register.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  register works!\n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  register works!'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RequestInterceptor.html":{"url":"interceptors/RequestInterceptor.html","title":"interceptor - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/request.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/request.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/request.interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IdentityService } from '@services/identity.service';\n\n@Injectable()\nexport class RequestInterceptor implements HttpInterceptor {\n  constructor(private identity: IdentityService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n\n    const headers = this.identity.authState ?\n      req.headers\n        .append(\"Authorization\", `Bearer ${this.identity.identity.token}`)\n        .append('Content-Type', 'application/json') :\n      req.headers.append('Content-Type', 'application/json');\n\n    const authReq = req.clone({ headers });\n    return next.handle(authReq);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptor.html":{"url":"interceptors/ResponseInterceptor.html","title":"interceptor - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/response.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/response.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/response.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Identity } from '@models/identity.model'\nimport { IdentityService } from '@services/identity.service'\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  constructor(private identity: IdentityService) { }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          if (event.headers.has(\"authorization\")) {\n            this.identity.setIdentity(new Identity({ token: event.headers.get(\"authorization\").replace('Bearer ', '') }));\n          }\n        }\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search/search.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                        NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/search/search.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Profile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/search/search.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Profile } from '@models/profile.model';\nimport { NetworkService } from '@services/network.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  public entries: Profile[];\n  constructor(private network: NetworkService) { }\n  ngOnInit() { this.network.getData('profiles').then(result => this.entries = result); }\n}\n\n    \n\n    \n        \n  search works!\n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  search works!'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchComponent', 'selector': 'app-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\ncluster_SearchModule_exports\n\n\n\ncluster_SearchModule_declarations\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nAccountComponent->SearchModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nSearchModule -->\n\nLoginComponent->SearchModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nSearchModule -->\n\nRegisterComponent->SearchModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nSearchModule->AccountComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nSearchModule->LoginComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nSearchModule->RegisterComponent \n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SearchRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule        } from '@angular/common'\nimport { HttpClientModule    } from '@angular/common/http'\nimport { NgModule            } from '@angular/core'\nimport { SearchComponent     } from '@search/search.component'\nimport { SearchRoutingModule } from '@search/search-routing.module'\n\nconst components = [SearchComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SearchRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [components],\n  exports: [components]\n})\nexport class SearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchRoutingModule.html":{"url":"modules/SearchRoutingModule.html","title":"module - SearchRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/search/search-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchComponent } from '@search/search.component';\n\nconst routes: Routes = [\n  { path: '', component: SearchComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                collection\n                            \n                            \n                                    Private\n                                    Readonly\n                                collection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCollection$\n                            \n                            \n                                    Public\n                                getStorage\n                            \n                            \n                                    Private\n                                setStorage\n                            \n                            \n                                    Public\n                                updateStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/services/storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCollection$\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollection$(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/storage.service.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/storage.service.ts:14\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setStorage(key: string, values?: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/storage.service.ts:46\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStorage(key: string, values: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/storage.service.ts:26\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    values\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/storage.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            collection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IKeyValue>\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/storage.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject    } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { IKeyValue  } from '@helpers/key.value'\nimport { ModelBase  } from '@models/base.model'\n\n@Injectable()\nexport class StorageService {\n  private readonly collection: IKeyValue = {};\n  private readonly collection$: IKeyValue> = {};\n\n  // ======================================= //\n  constructor() { }\n  // ======================================= //\n  public getStorage>(key: string): Promise {\n    return Promise.resolve().then(async () => {\n\n      const values: IKeyValue = JSON.parse(localStorage.getItem(key));\n      this.collection[key] = values\n        ? Object.keys(values)\n          .map(item => item[key])\n        : new Array();\n\n      return this.collection[key].slice() as T[];\n    });\n  }\n  public updateStorage>(key: string, values: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: T[] = await this.getStorage(key);\n      values.forEach(current => {\n        const index = storage.findIndex(item => item?.id == current?.id || item?.name == current.name);\n        index > -1 ? storage.splice(index, 1, current) : storage.push(current);\n      });\n      this.getCollection$(key)\n        .next(await this.setStorage(key, storage.filter(value => value)));\n\n      return storage.filter(value => value) as T[];\n    });\n  }\n  public getCollection$>(key: string): Subject {\n    if (!this.collection$[key])\n      this.collection$[key] = new Subject();\n\n    return this.collection$[key] as Subject;\n  }\n  private setStorage>(key: string, values?: T[]): Promise {\n    return Promise.resolve().then(async () => {\n\n      const storage: IKeyValue = {};\n      values.forEach(item => storage[item.name] = item);\n      localStorage.setItem(key, JSON.stringify(storage));\n\n      return await this.getStorage(key) as T[];\n    });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/account/account.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/account/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/account/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/search/search.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/key.value.ts\n            \n            interface\n            IKeyValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/models/account.model.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/common/models/base.model.ts\n            \n            class\n            ModelBase\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/models/base.model.ts\n            \n            interface\n            IModelBase\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/models/identity.model.ts\n            \n            class\n            Identity\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/common/models/identity.model.ts\n            \n            interface\n            IIdentity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/models/profile.model.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/common/services/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/identity.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/common/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/network.service.ts\n            \n            injectable\n            NetworkService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/services/request.interceptor.ts\n            \n            interceptor\n            RequestInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/response.interceptor.ts\n            \n            interceptor\n            ResponseInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.6.0\n        \n            crypto-js : ^4.0.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            jquery : ^3.5.1\n        \n            ngx-toastr : ^13.2.0\n        \n            popper.js : ^1.16.1\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.2.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogScope   (src/.../log.scope.enum.ts)\n                        \n                        \n                            MessageType   (src/.../message.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enums/log.scope.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogScope\n                    \n                \n                        \n                            \n                                 Authentication\n                            \n                        \n                        \n                            \n                                Value : Authentication\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : Error\n                            \n                        \n                        \n                            \n                                 Lifecycle\n                            \n                        \n                        \n                            \n                                Value : Lifecycle\n                            \n                        \n                        \n                            \n                                 Network\n                            \n                        \n                        \n                            \n                                Value : Network\n                            \n                        \n                        \n                            \n                                 Router\n                            \n                        \n                        \n                            \n                                Value : Router\n                            \n                        \n                        \n                            \n                                 Storage\n                            \n                        \n                        \n                            \n                                Value : Storage\n                            \n                        \n            \n        \n\n    src/common/enums/message.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountComponent->AccountModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nAccountComponent->ProfileModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nAccountComponent->SearchModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAccountModule -->\n\nLoginComponent->AccountModule\n\n\n\nProfileModule -->\n\nLoginComponent->ProfileModule\n\n\n\nSearchModule -->\n\nLoginComponent->SearchModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAccountModule -->\n\nRegisterComponent->AccountModule\n\n\n\nProfileModule -->\n\nRegisterComponent->ProfileModule\n\n\n\nSearchModule -->\n\nRegisterComponent->SearchModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nAccountModule->AccountComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAccountModule->LoginComponent \n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nAccountModule->RegisterComponent \n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nRequestInterceptor\n\nRequestInterceptor\n\nAppModule -->\n\nRequestInterceptor->AppModule\n\n\n\n\n\nResponseInterceptor\n\nResponseInterceptor\n\nAppModule -->\n\nResponseInterceptor->AppModule\n\n\n\nAccountComponent  -->\n\nProfileModule->AccountComponent \n\n\n\nLoginComponent  -->\n\nProfileModule->LoginComponent \n\n\n\nRegisterComponent  -->\n\nProfileModule->RegisterComponent \n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\nAccountComponent  -->\n\nSearchModule->AccountComponent \n\n\n\nLoginComponent  -->\n\nSearchModule->LoginComponent \n\n\n\nRegisterComponent  -->\n\nSearchModule->RegisterComponent \n\n\n\n\n\nSearchRoutingModule\n\nSearchRoutingModule\n\nSearchModule -->\n\nSearchRoutingModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../account.module.ts)\n                        \n                        \n                            components   (src/.../profile.module.ts)\n                        \n                        \n                            components   (src/.../search.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/account/account.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountComponent, LoginComponent, RegisterComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/profile/profile.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/search/search.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SearchComponent]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
